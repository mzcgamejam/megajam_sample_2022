// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Resolvers
{
    using System;

    public class GeneratedResolver : global::MessagePack.IFormatterResolver
    {
        public static readonly global::MessagePack.IFormatterResolver Instance = new GeneratedResolver();

        private GeneratedResolver()
        {
        }

        public global::MessagePack.Formatters.IMessagePackFormatter<T> GetFormatter<T>()
        {
            return FormatterCache<T>.Formatter;
        }

        private static class FormatterCache<T>
        {
            internal static readonly global::MessagePack.Formatters.IMessagePackFormatter<T> Formatter;

            static FormatterCache()
            {
                var f = GeneratedResolverGetFormatterHelper.GetFormatter(typeof(T));
                if (f != null)
                {
                    Formatter = (global::MessagePack.Formatters.IMessagePackFormatter<T>)f;
                }
            }
        }
    }

    internal static class GeneratedResolverGetFormatterHelper
    {
        private static readonly global::System.Collections.Generic.Dictionary<Type, int> lookup;

        static GeneratedResolverGetFormatterHelper()
        {
            lookup = new global::System.Collections.Generic.Dictionary<Type, int>(10)
            {
                { typeof(global::BattleProtocol.MessageType), 0 },
                { typeof(global::CommonType.AttackType), 1 },
                { typeof(global::CommonType.PlayerType), 2 },
                { typeof(global::CommonType.ResultType), 3 },
                { typeof(global::BattleProtocol.BaseProtocol), 4 },
                { typeof(global::BattleProtocol.Entities.ProtoBattleAttack), 5 },
                { typeof(global::BattleProtocol.Entities.ProtoBattleEnter), 6 },
                { typeof(global::BattleProtocol.Entities.ProtoBattleEnterResult), 7 },
                { typeof(global::BattleProtocol.Entities.ProtoBattleResult), 8 },
                { typeof(global::BattleProtocol.Entities.ProtoTest), 9 },
            };
        }

        internal static object GetFormatter(Type t)
        {
            int key;
            if (!lookup.TryGetValue(t, out key))
            {
                return null;
            }

            switch (key)
            {
                case 0: return new MessagePack.Formatters.BattleProtocol.MessageTypeFormatter();
                case 1: return new MessagePack.Formatters.CommonType.AttackTypeFormatter();
                case 2: return new MessagePack.Formatters.CommonType.PlayerTypeFormatter();
                case 3: return new MessagePack.Formatters.CommonType.ResultTypeFormatter();
                case 4: return new MessagePack.Formatters.BattleProtocol.BaseProtocolFormatter();
                case 5: return new MessagePack.Formatters.BattleProtocol.Entities.ProtoBattleAttackFormatter();
                case 6: return new MessagePack.Formatters.BattleProtocol.Entities.ProtoBattleEnterFormatter();
                case 7: return new MessagePack.Formatters.BattleProtocol.Entities.ProtoBattleEnterResultFormatter();
                case 8: return new MessagePack.Formatters.BattleProtocol.Entities.ProtoBattleResultFormatter();
                case 9: return new MessagePack.Formatters.BattleProtocol.Entities.ProtoTestFormatter();
                default: return null;
            }
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1649 // File name should match first type name


// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.BattleProtocol
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class MessageTypeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.MessageType>
    {
        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.MessageType value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int32)value);
        }

        public global::BattleProtocol.MessageType Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::BattleProtocol.MessageType)reader.ReadInt32();
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.CommonType
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class AttackTypeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CommonType.AttackType>
    {
        public void Serialize(ref MessagePackWriter writer, global::CommonType.AttackType value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int32)value);
        }

        public global::CommonType.AttackType Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::CommonType.AttackType)reader.ReadInt32();
        }
    }

    public sealed class PlayerTypeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CommonType.PlayerType>
    {
        public void Serialize(ref MessagePackWriter writer, global::CommonType.PlayerType value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int32)value);
        }

        public global::CommonType.PlayerType Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::CommonType.PlayerType)reader.ReadInt32();
        }
    }

    public sealed class ResultTypeFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::CommonType.ResultType>
    {
        public void Serialize(ref MessagePackWriter writer, global::CommonType.ResultType value, global::MessagePack.MessagePackSerializerOptions options)
        {
            writer.Write((Int32)value);
        }

        public global::CommonType.ResultType Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            return (global::CommonType.ResultType)reader.ReadInt32();
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name



// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.BattleProtocol
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class BaseProtocolFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.BaseProtocol>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.BaseProtocol value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(1);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
        }

        public global::BattleProtocol.BaseProtocol Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.BaseProtocol();
            ____result.Msg = __Msg__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

// <auto-generated>
// THIS (.cs) FILE IS GENERATED BY MPC(MessagePack-CSharp). DO NOT CHANGE IT.
// </auto-generated>

#pragma warning disable 618
#pragma warning disable 612
#pragma warning disable 414
#pragma warning disable 168

#pragma warning disable SA1129 // Do not use default value type constructor
#pragma warning disable SA1200 // Using directives should be placed correctly
#pragma warning disable SA1309 // Field names should not begin with underscore
#pragma warning disable SA1312 // Variable names should begin with lower-case letter
#pragma warning disable SA1403 // File may only contain a single namespace
#pragma warning disable SA1649 // File name should match first type name

namespace MessagePack.Formatters.BattleProtocol.Entities
{
    using System;
    using System.Buffers;
    using MessagePack;

    public sealed class ProtoBattleAttackFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.Entities.ProtoBattleAttack>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.Entities.ProtoBattleAttack value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(4);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.GameSessionId, options);
            formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Serialize(ref writer, value.PlayerType, options);
            formatterResolver.GetFormatterWithVerify<global::CommonType.AttackType>().Serialize(ref writer, value.AttackType, options);
        }

        public global::BattleProtocol.Entities.ProtoBattleAttack Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);
            var __GameSessionId__ = default(string);
            var __PlayerType__ = default(global::CommonType.PlayerType);
            var __AttackType__ = default(global::CommonType.AttackType);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __GameSessionId__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __PlayerType__ = formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __AttackType__ = formatterResolver.GetFormatterWithVerify<global::CommonType.AttackType>().Deserialize(ref reader, options);
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.Entities.ProtoBattleAttack();
            ____result.Msg = __Msg__;
            ____result.GameSessionId = __GameSessionId__;
            ____result.PlayerType = __PlayerType__;
            ____result.AttackType = __AttackType__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ProtoBattleEnterFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.Entities.ProtoBattleEnter>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.Entities.ProtoBattleEnter value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(4);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.GameSessionId, options);
            formatterResolver.GetFormatterWithVerify<string>().Serialize(ref writer, value.PlayerSessionId, options);
            writer.Write(value.UserId);
        }

        public global::BattleProtocol.Entities.ProtoBattleEnter Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);
            var __GameSessionId__ = default(string);
            var __PlayerSessionId__ = default(string);
            var __UserId__ = default(int);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __GameSessionId__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __PlayerSessionId__ = formatterResolver.GetFormatterWithVerify<string>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __UserId__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.Entities.ProtoBattleEnter();
            ____result.Msg = __Msg__;
            ____result.GameSessionId = __GameSessionId__;
            ____result.PlayerSessionId = __PlayerSessionId__;
            ____result.UserId = __UserId__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ProtoBattleEnterResultFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.Entities.ProtoBattleEnterResult>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.Entities.ProtoBattleEnterResult value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
            formatterResolver.GetFormatterWithVerify<global::CommonType.ResultType>().Serialize(ref writer, value.ResultType, options);
            formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Serialize(ref writer, value.PlayerType, options);
            writer.Write(value.GameStartDateTimeTicks);
            writer.Write(value.GameSecond);
        }

        public global::BattleProtocol.Entities.ProtoBattleEnterResult Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);
            var __ResultType__ = default(global::CommonType.ResultType);
            var __PlayerType__ = default(global::CommonType.PlayerType);
            var __GameStartDateTimeTicks__ = default(long);
            var __GameSecond__ = default(int);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __ResultType__ = formatterResolver.GetFormatterWithVerify<global::CommonType.ResultType>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __PlayerType__ = formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Deserialize(ref reader, options);
                        break;
                    case 3:
                        __GameStartDateTimeTicks__ = reader.ReadInt64();
                        break;
                    case 4:
                        __GameSecond__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.Entities.ProtoBattleEnterResult();
            ____result.Msg = __Msg__;
            ____result.ResultType = __ResultType__;
            ____result.PlayerType = __PlayerType__;
            ____result.GameStartDateTimeTicks = __GameStartDateTimeTicks__;
            ____result.GameSecond = __GameSecond__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ProtoBattleResultFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.Entities.ProtoBattleResult>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.Entities.ProtoBattleResult value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(5);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
            formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Serialize(ref writer, value.Winner, options);
            writer.Write(value.IsBattleEnd);
            writer.Write(value.RoundStartDateTimeTicks);
            writer.Write(value.RoundSecond);
        }

        public global::BattleProtocol.Entities.ProtoBattleResult Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);
            var __Winner__ = default(global::CommonType.PlayerType);
            var __IsBattleEnd__ = default(bool);
            var __RoundStartDateTimeTicks__ = default(long);
            var __RoundSecond__ = default(int);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __Winner__ = formatterResolver.GetFormatterWithVerify<global::CommonType.PlayerType>().Deserialize(ref reader, options);
                        break;
                    case 2:
                        __IsBattleEnd__ = reader.ReadBoolean();
                        break;
                    case 3:
                        __RoundStartDateTimeTicks__ = reader.ReadInt64();
                        break;
                    case 4:
                        __RoundSecond__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.Entities.ProtoBattleResult();
            ____result.Msg = __Msg__;
            ____result.Winner = __Winner__;
            ____result.IsBattleEnd = __IsBattleEnd__;
            ____result.RoundStartDateTimeTicks = __RoundStartDateTimeTicks__;
            ____result.RoundSecond = __RoundSecond__;
            reader.Depth--;
            return ____result;
        }
    }

    public sealed class ProtoTestFormatter : global::MessagePack.Formatters.IMessagePackFormatter<global::BattleProtocol.Entities.ProtoTest>
    {

        public void Serialize(ref MessagePackWriter writer, global::BattleProtocol.Entities.ProtoTest value, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (value == null)
            {
                writer.WriteNil();
                return;
            }

            IFormatterResolver formatterResolver = options.Resolver;
            writer.WriteArrayHeader(2);
            formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Serialize(ref writer, value.Msg, options);
            writer.Write(value.Num);
        }

        public global::BattleProtocol.Entities.ProtoTest Deserialize(ref MessagePackReader reader, global::MessagePack.MessagePackSerializerOptions options)
        {
            if (reader.TryReadNil())
            {
                return null;
            }

            options.Security.DepthStep(ref reader);
            IFormatterResolver formatterResolver = options.Resolver;
            var length = reader.ReadArrayHeader();
            var __Msg__ = default(global::BattleProtocol.MessageType);
            var __Num__ = default(int);

            for (int i = 0; i < length; i++)
            {
                switch (i)
                {
                    case 0:
                        __Msg__ = formatterResolver.GetFormatterWithVerify<global::BattleProtocol.MessageType>().Deserialize(ref reader, options);
                        break;
                    case 1:
                        __Num__ = reader.ReadInt32();
                        break;
                    default:
                        reader.Skip();
                        break;
                }
            }

            var ____result = new global::BattleProtocol.Entities.ProtoTest();
            ____result.Msg = __Msg__;
            ____result.Num = __Num__;
            reader.Depth--;
            return ____result;
        }
    }
}

#pragma warning restore 168
#pragma warning restore 414
#pragma warning restore 618
#pragma warning restore 612

#pragma warning restore SA1129 // Do not use default value type constructor
#pragma warning restore SA1200 // Using directives should be placed correctly
#pragma warning restore SA1309 // Field names should not begin with underscore
#pragma warning restore SA1312 // Variable names should begin with lower-case letter
#pragma warning restore SA1403 // File may only contain a single namespace
#pragma warning restore SA1649 // File name should match first type name

